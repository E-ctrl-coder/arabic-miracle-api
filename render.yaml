Cloning from https://github.com/E-ctrl-coder/arabic-miracle-api
==> Checking out commit 940034303a5d868006e8e72cb49b40e67c7b8761 in branch main
==> Downloading cache...
==> Installing Python version 3.11.11...
==> Transferred 150MB in 7s. Extraction took 3s.
==> Using Python version 3.11.11 (default)
==> Docs on specifying a Python version: https://render.com/docs/python-version
==> Using Poetry version 1.7.1 (default)
==> Docs on specifying a Poetry version: https://render.com/docs/poetry-version
==> Running build command 'pip install -r requirements.txt'...
Collecting Flask>=2.0 (from -r requirements.txt (line 1))
  Using cached flask-3.1.1-py3-none-any.whl.metadata (3.0 kB)
Collecting flask-cors>=3.0 (from -r requirements.txt (line 2))
  Using cached flask_cors-6.0.1-py3-none-any.whl.metadata (5.3 kB)
Collecting openai>=0.27.0 (from -r requirements.txt (line 3))
  Using cached openai-1.93.0-py3-none-any.whl.metadata (29 kB)
Collecting gunicorn>=20.0 (from -r requirements.txt (line 4))
  Using cached gunicorn-23.0.0-py3-none-any.whl.metadata (4.4 kB)
Collecting blinker>=1.9.0 (from Flask>=2.0->-r requirements.txt (line 1))
  Using cached blinker-1.9.0-py3-none-any.whl.metadata (1.6 kB)
Collecting click>=8.1.3 (from Flask>=2.0->-r requirements.txt (line 1))
  Using cached click-8.2.1-py3-none-any.whl.metadata (2.5 kB)
Collecting itsdangerous>=2.2.0 (from Flask>=2.0->-r requirements.txt (line 1))
  Using cached itsdangerous-2.2.0-py3-none-any.whl.metadata (1.9 kB)
Collecting jinja2>=3.1.2 (from Flask>=2.0->-r requirements.txt (line 1))
  Using cached jinja2-3.1.6-py3-none-any.whl.metadata (2.9 kB)
Collecting markupsafe>=2.1.1 (from Flask>=2.0->-r requirements.txt (line 1))
  Using cached MarkupSafe-3.0.2-cp311-cp311-manylinux_2_17_x86_64.manylinux2014_x86_64.whl.metadata (4.0 kB)
Collecting werkzeug>=3.1.0 (from Flask>=2.0->-r requirements.txt (line 1))
  Using cached werkzeug-3.1.3-py3-none-any.whl.metadata (3.7 kB)
Collecting anyio<5,>=3.5.0 (from openai>=0.27.0->-r requirements.txt (line 3))
  Using cached anyio-4.9.0-py3-none-any.whl.metadata (4.7 kB)
Collecting distro<2,>=1.7.0 (from openai>=0.27.0->-r requirements.txt (line 3))
  Using cached distro-1.9.0-py3-none-any.whl.metadata (6.8 kB)
Collecting httpx<1,>=0.23.0 (from openai>=0.27.0->-r requirements.txt (line 3))
  Using cached httpx-0.28.1-py3-none-any.whl.metadata (7.1 kB)
Collecting jiter<1,>=0.4.0 (from openai>=0.27.0->-r requirements.txt (line 3))
  Using cached jiter-0.10.0-cp311-cp311-manylinux_2_17_x86_64.manylinux2014_x86_64.whl.metadata (5.2 kB)
Collecting pydantic<3,>=1.9.0 (from openai>=0.27.0->-r requirements.txt (line 3))
  Using cached pydantic-2.11.7-py3-none-any.whl.metadata (67 kB)
Collecting sniffio (from openai>=0.27.0->-r requirements.txt (line 3))
  Using cached sniffio-1.3.1-py3-none-any.whl.metadata (3.9 kB)
Collecting tqdm>4 (from openai>=0.27.0->-r requirements.txt (line 3))
  Using cached tqdm-4.67.1-py3-none-any.whl.metadata (57 kB)
Collecting typing-extensions<5,>=4.11 (from openai>=0.27.0->-r requirements.txt (line 3))
  Using cached typing_extensions-4.14.0-py3-none-any.whl.metadata (3.0 kB)
Collecting packaging (from gunicorn>=20.0->-r requirements.txt (line 4))
  Using cached packaging-25.0-py3-none-any.whl.metadata (3.3 kB)
Collecting idna>=2.8 (from anyio<5,>=3.5.0->openai>=0.27.0->-r requirements.txt (line 3))
  Using cached idna-3.10-py3-none-any.whl.metadata (10 kB)
Collecting certifi (from httpx<1,>=0.23.0->openai>=0.27.0->-r requirements.txt (line 3))
  Using cached certifi-2025.6.15-py3-none-any.whl.metadata (2.4 kB)
Collecting httpcore==1.* (from httpx<1,>=0.23.0->openai>=0.27.0->-r requirements.txt (line 3))
  Using cached httpcore-1.0.9-py3-none-any.whl.metadata (21 kB)
Collecting h11>=0.16 (from httpcore==1.*->httpx<1,>=0.23.0->openai>=0.27.0->-r requirements.txt (line 3))
  Using cached h11-0.16.0-py3-none-any.whl.metadata (8.3 kB)
Collecting annotated-types>=0.6.0 (from pydantic<3,>=1.9.0->openai>=0.27.0->-r requirements.txt (line 3))
  Using cached annotated_types-0.7.0-py3-none-any.whl.metadata (15 kB)
Collecting pydantic-core==2.33.2 (from pydantic<3,>=1.9.0->openai>=0.27.0->-r requirements.txt (line 3))
  Using cached pydantic_core-2.33.2-cp311-cp311-manylinux_2_17_x86_64.manylinux2014_x86_64.whl.metadata (6.8 kB)
Collecting typing-inspection>=0.4.0 (from pydantic<3,>=1.9.0->openai>=0.27.0->-r requirements.txt (line 3))
  Using cached typing_inspection-0.4.1-py3-none-any.whl.metadata (2.6 kB)
Using cached flask-3.1.1-py3-none-any.whl (103 kB)
Using cached flask_cors-6.0.1-py3-none-any.whl (13 kB)
Using cached openai-1.93.0-py3-none-any.whl (755 kB)
Using cached gunicorn-23.0.0-py3-none-any.whl (85 kB)
Using cached anyio-4.9.0-py3-none-any.whl (100 kB)
Using cached blinker-1.9.0-py3-none-any.whl (8.5 kB)
Using cached click-8.2.1-py3-none-any.whl (102 kB)
Using cached distro-1.9.0-py3-none-any.whl (20 kB)
Using cached httpx-0.28.1-py3-none-any.whl (73 kB)
Using cached httpcore-1.0.9-py3-none-any.whl (78 kB)
Using cached itsdangerous-2.2.0-py3-none-any.whl (16 kB)
Using cached jinja2-3.1.6-py3-none-any.whl (134 kB)
Using cached jiter-0.10.0-cp311-cp311-manylinux_2_17_x86_64.manylinux2014_x86_64.whl (352 kB)
Using cached MarkupSafe-3.0.2-cp311-cp311-manylinux_2_17_x86_64.manylinux2014_x86_64.whl (23 kB)
Using cached pydantic-2.11.7-py3-none-any.whl (444 kB)
Using cached pydantic_core-2.33.2-cp311-cp311-manylinux_2_17_x86_64.manylinux2014_x86_64.whl (2.0 MB)
Using cached sniffio-1.3.1-py3-none-any.whl (10 kB)
Using cached tqdm-4.67.1-py3-none-any.whl (78 kB)
Using cached typing_extensions-4.14.0-py3-none-any.whl (43 kB)
Using cached werkzeug-3.1.3-py3-none-any.whl (224 kB)
Using cached packaging-25.0-py3-none-any.whl (66 kB)
Using cached annotated_types-0.7.0-py3-none-any.whl (13 kB)
Using cached idna-3.10-py3-none-any.whl (70 kB)
Using cached typing_inspection-0.4.1-py3-none-any.whl (14 kB)
Using cached certifi-2025.6.15-py3-none-any.whl (157 kB)
Using cached h11-0.16.0-py3-none-any.whl (37 kB)
Installing collected packages: typing-extensions, tqdm, sniffio, packaging, markupsafe, jiter, itsdangerous, idna, h11, distro, click, certifi, blinker, annotated-types, werkzeug, typing-inspection, pydantic-core, jinja2, httpcore, gunicorn, anyio, pydantic, httpx, Flask, openai, flask-cors
Successfully installed Flask-3.1.1 annotated-types-0.7.0 anyio-4.9.0 blinker-1.9.0 certifi-2025.6.15 click-8.2.1 distro-1.9.0 flask-cors-6.0.1 gunicorn-23.0.0 h11-0.16.0 httpcore-1.0.9 httpx-0.28.1 idna-3.10 itsdangerous-2.2.0 jinja2-3.1.6 jiter-0.10.0 markupsafe-3.0.2 openai-1.93.0 packaging-25.0 pydantic-2.11.7 pydantic-core-2.33.2 sniffio-1.3.1 tqdm-4.67.1 typing-extensions-4.14.0 typing-inspection-0.4.1 werkzeug-3.1.3
[notice] A new release of pip is available: 24.0 -> 25.1.1
[notice] To update, run: pip install --upgrade pip
==> Uploading build...
==> Deploying...
==> Uploaded in 10.6s. Compression took 3.3s
==> Build successful ðŸŽ‰
==> No open ports detected, continuing to scan...
==> Docs on specifying a port: https://render.com/docs/web-services#port-binding
==> Running 'python app.py'
==> Your service is live ðŸŽ‰
==> 
==> ///////////////////////////////////////////////////////////
==> 
==> Available at your primary URL https://arabic-miracle-api.onrender.com
==> 
==> ///////////////////////////////////////////////////////////
 * Serving Flask app 'app'
 * Debug mode: off
WARNING: This is a development server. Do not use it in a production deployment. Use a production WSGI server instead.
 * Running on all addresses (0.0.0.0)
 * Running on http://127.0.0.1:10000
 * Running on http://10.220.182.10:10000
Press CTRL+C to quit
127.0.0.1 - - [29/Jun/2025 12:28:49] "HEAD / HTTP/1.1" 200 -
127.0.0.1 - - [29/Jun/2025 12:28:56] "GET / HTTP/1.1" 200 -
==> Detected service running on port 10000
==> Docs on specifying a port: https://render.com/docs/web-services#port-binding
